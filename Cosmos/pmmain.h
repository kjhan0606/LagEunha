void psolover(SimParameters *, GridInfo *);

#define Get_TSC_Den(simpar,type,den,xs,ys,zs) do{\
	ptrdiff_t i;\
	for(i=0;i<type##_NP(simpar);i++){\
		float pmas0 = type##_MASS(simpar,i);\
		float p05 = pmas0*0.5;\
		PosType xp = XofP(simpar,type##_BP(simpar)+i)-xs;\
		PosType yp = YofP(simpar,type##_BP(simpar)+i)-ys;\
		PosType zp = ZofP(simpar,type##_BP(simpar)+i)-zs;\
		ptrdiff_t nearx = rint(xp);\
		ptrdiff_t neary = rint(yp);\
		ptrdiff_t nearz = rint(zp);\
		PosType xmin = xp-nearx;\
		PosType ymin = yp-neary;\
		PosType zmin = zp-nearz;\
		ptrdiff_t xsign = icopysign(xmin);\
		ptrdiff_t ysign = icopysign(ymin);\
		ptrdiff_t zsign = icopysign(zmin);\
		ptrdiff_t i1 = nearx;\
		ptrdiff_t i2 = nearx+xsign;\
		ptrdiff_t i3 = nearx-xsign;\
		ptrdiff_t j1 = neary;\
		ptrdiff_t j2 = neary+ysign;\
		ptrdiff_t j3 = neary-ysign;\
		ptrdiff_t k1 = nearz;\
		ptrdiff_t k2 = nearz+zsign;\
		ptrdiff_t k3 = nearz-zsign;\
		DenType xd1 = fabs(xmin);\
		DenType yd1 = fabs(ymin);\
		DenType zd1 = fabs(zmin);\
		DenType wx1 = (0.75-xd1*xd1)*pmas0;\
		DenType wy1 =  0.75-yd1*yd1;\
		DenType wz1 =  0.75-zd1*zd1;\
		DenType wx3 = p05*(0.25+xd1*(xd1-1.));\
		DenType wx2 = wx3 + pmas0*xd1;\
		DenType wy3 = 0.5*(0.25+yd1*(yd1-1.));\
		DenType wy2 = wy3 + yd1;\
		DenType wz3 = 0.5*(0.25+zd1*(zd1-1.));\
		DenType wz2 = wz3 + zd1;\
		DenType wx1wy1 = wx1*wy1;\
		DenType wx2wy1 = wx2*wy1;\
		DenType wx3wy1 = wx3*wy1;\
		DenType wx1wy2 = wx1*wy2;\
		DenType wx2wy2 = wx2*wy2;\
		DenType wx3wy2 = wx3*wy2;\
		DenType wx1wy3 = wx1*wy3;\
		DenType wx2wy3 = wx2*wy3;\
		DenType wx3wy3 = wx3*wy3;\
		den[i1+nx*(j1+ny*k1)] += wx1wy1*wz1;\
		den[i2+nx*(j1+ny*k1)] += wx2wy1*wz1;\
		den[i3+nx*(j1+ny*k1)] += wx3wy1*wz1;\
		den[i1+nx*(j2+ny*k1)] += wx1wy2*wz1;\
		den[i2+nx*(j2+ny*k1)] += wx2wy2*wz1;\
		den[i3+nx*(j2+ny*k1)] += wx3wy2*wz1;\
		den[i1+nx*(j3+ny*k1)] += wx1wy3*wz1;\
		den[i2+nx*(j3+ny*k1)] += wx2wy3*wz1;\
		den[i3+nx*(j3+ny*k1)] += wx3wy3*wz1;\
		den[i1+nx*(j1+ny*k2)] += wx1wy1*wz2;\
		den[i2+nx*(j1+ny*k2)] += wx2wy1*wz2;\
		den[i3+nx*(j1+ny*k2)] += wx3wy1*wz2;\
		den[i1+nx*(j2+ny*k2)] += wx1wy2*wz2;\
		den[i2+nx*(j2+ny*k2)] += wx2wy2*wz2;\
		den[i3+nx*(j2+ny*k2)] += wx3wy2*wz2;\
		den[i1+nx*(j3+ny*k2)] += wx1wy3*wz2;\
		den[i2+nx*(j3+ny*k2)] += wx2wy3*wz2;\
		den[i3+nx*(j3+ny*k2)] += wx3wy3*wz2;\
		den[i1+nx*(j1+ny*k3)] += wx1wy1*wz3;\
		den[i2+nx*(j1+ny*k3)] += wx2wy1*wz3;\
		den[i3+nx*(j1+ny*k3)] += wx3wy1*wz3;\
		den[i1+nx*(j2+ny*k3)] += wx1wy2*wz3;\
		den[i2+nx*(j2+ny*k3)] += wx2wy2*wz3;\
		den[i3+nx*(j2+ny*k3)] += wx3wy2*wz3;\
		den[i1+nx*(j3+ny*k3)] += wx1wy3*wz3;\
		den[i2+nx*(j3+ny*k3)] += wx2wy3*wz3;\
		den[i3+nx*(j3+ny*k3)] += wx3wy3*wz3;\
	}\
} while(0)


#define OMP_Get_TSC_Den(simpar,type,den,xs,ys,zs, zwindow1,zwindow2) do{\
	ptrdiff_t i;\
	for(i=0;i<type##_NP(simpar);i++){\
		float zzp = ZofP(simpar,type##_BP(simpar)+i);\
		if(zzp>=zwindow1 && zzp < zwindow2) {\
			float pmas0 = type##_MASS(simpar,i);\
			float p05 = pmas0*0.5;\
			PosType xp = XofP(simpar,type##_BP(simpar)+i)-xs;\
			PosType yp = YofP(simpar,type##_BP(simpar)+i)-ys;\
			PosType zp = ZofP(simpar,type##_BP(simpar)+i)-zs;\
			ptrdiff_t nearx = rint(xp);\
			ptrdiff_t neary = rint(yp);\
			ptrdiff_t nearz = rint(zp);\
			PosType xmin = xp-nearx;\
			PosType ymin = yp-neary;\
			PosType zmin = zp-nearz;\
			ptrdiff_t xsign = icopysign(xmin);\
			ptrdiff_t ysign = icopysign(ymin);\
			ptrdiff_t zsign = icopysign(zmin);\
			ptrdiff_t i1 = nearx;\
			ptrdiff_t i2 = nearx+xsign;\
			ptrdiff_t i3 = nearx-xsign;\
			ptrdiff_t j1 = neary;\
			ptrdiff_t j2 = neary+ysign;\
			ptrdiff_t j3 = neary-ysign;\
			ptrdiff_t k1 = nearz;\
			ptrdiff_t k2 = nearz+zsign;\
			ptrdiff_t k3 = nearz-zsign;\
			DenType xd1 = fabs(xmin);\
			DenType yd1 = fabs(ymin);\
			DenType zd1 = fabs(zmin);\
			DenType wx1 = (0.75-xd1*xd1)*pmas0;\
			DenType wy1 =  0.75-yd1*yd1;\
			DenType wz1 =  0.75-zd1*zd1;\
			DenType wx3 = p05*(0.25+xd1*(xd1-1.));\
			DenType wx2 = wx3 + pmas0*xd1;\
			DenType wy3 = 0.5*(0.25+yd1*(yd1-1.));\
			DenType wy2 = wy3 + yd1;\
			DenType wz3 = 0.5*(0.25+zd1*(zd1-1.));\
			DenType wz2 = wz3 + zd1;\
			DenType wx1wy1 = wx1*wy1;\
			DenType wx2wy1 = wx2*wy1;\
			DenType wx3wy1 = wx3*wy1;\
			DenType wx1wy2 = wx1*wy2;\
			DenType wx2wy2 = wx2*wy2;\
			DenType wx3wy2 = wx3*wy2;\
			DenType wx1wy3 = wx1*wy3;\
			DenType wx2wy3 = wx2*wy3;\
			DenType wx3wy3 = wx3*wy3;\
			den[i1+nx*(j1+ny*k1)] += wx1wy1*wz1;\
			den[i2+nx*(j1+ny*k1)] += wx2wy1*wz1;\
			den[i3+nx*(j1+ny*k1)] += wx3wy1*wz1;\
			den[i1+nx*(j2+ny*k1)] += wx1wy2*wz1;\
			den[i2+nx*(j2+ny*k1)] += wx2wy2*wz1;\
			den[i3+nx*(j2+ny*k1)] += wx3wy2*wz1;\
			den[i1+nx*(j3+ny*k1)] += wx1wy3*wz1;\
			den[i2+nx*(j3+ny*k1)] += wx2wy3*wz1;\
			den[i3+nx*(j3+ny*k1)] += wx3wy3*wz1;\
			den[i1+nx*(j1+ny*k2)] += wx1wy1*wz2;\
			den[i2+nx*(j1+ny*k2)] += wx2wy1*wz2;\
			den[i3+nx*(j1+ny*k2)] += wx3wy1*wz2;\
			den[i1+nx*(j2+ny*k2)] += wx1wy2*wz2;\
			den[i2+nx*(j2+ny*k2)] += wx2wy2*wz2;\
			den[i3+nx*(j2+ny*k2)] += wx3wy2*wz2;\
			den[i1+nx*(j3+ny*k2)] += wx1wy3*wz2;\
			den[i2+nx*(j3+ny*k2)] += wx2wy3*wz2;\
			den[i3+nx*(j3+ny*k2)] += wx3wy3*wz2;\
			den[i1+nx*(j1+ny*k3)] += wx1wy1*wz3;\
			den[i2+nx*(j1+ny*k3)] += wx2wy1*wz3;\
			den[i3+nx*(j1+ny*k3)] += wx3wy1*wz3;\
			den[i1+nx*(j2+ny*k3)] += wx1wy2*wz3;\
			den[i2+nx*(j2+ny*k3)] += wx2wy2*wz3;\
			den[i3+nx*(j2+ny*k3)] += wx3wy2*wz3;\
			den[i1+nx*(j3+ny*k3)] += wx1wy3*wz3;\
			den[i2+nx*(j3+ny*k3)] += wx2wy3*wz3;\
			den[i3+nx*(j3+ny*k3)] += wx3wy3*wz3;\
		}\
	}\
} while(0)
